//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33492891
// Cuda compilation tools, release 12.3, V12.3.103
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_52
.address_size 64

	// .globl	_Z6searchPjjjjjjjjjjjjjjjjjjjjj

.visible .entry _Z6searchPjjjjjjjjjjjjjjjjjjjjj(
	.param .u64 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_0,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_1,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_2,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_3,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_4,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_5,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_6,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_7,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_8,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_9,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_10,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_11,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_12,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_13,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_14,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_15,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_16,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_17,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_18,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_19,
	.param .u32 _Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_20
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<1240>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r899, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_1];
	ld.param.u32 	%r900, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_2];
	ld.param.u32 	%r901, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_3];
	ld.param.u32 	%r902, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_4];
	ld.param.u32 	%r903, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_5];
	ld.param.u32 	%r904, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_6];
	ld.param.u32 	%r905, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_7];
	ld.param.u32 	%r906, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_8];
	ld.param.u32 	%r907, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_9];
	ld.param.u32 	%r908, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_10];
	ld.param.u32 	%r909, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_11];
	ld.param.u32 	%r910, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_12];
	ld.param.u32 	%r911, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_13];
	ld.param.u32 	%r912, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_14];
	ld.param.u32 	%r913, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_15];
	ld.param.u32 	%r914, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_16];
	ld.param.u32 	%r915, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_17];
	ld.param.u32 	%r916, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_18];
	ld.param.u32 	%r917, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_19];
	ld.param.u32 	%r918, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_20];
	mov.u32 	%r919, %ctaid.x;
	mov.u32 	%r920, %ntid.x;
	mov.u32 	%r921, %tid.x;
	mad.lo.s32 	%r1, %r920, %r919, %r921;
	add.s32 	%r922, %r903, %r899;
	add.s32 	%r5, %r922, %r907;
	mov.u32 	%r886, 16;
	// begin inline asm
	shf.r.clamp.b32 %r3, %r5, %r5, %r886;
	// end inline asm
	add.s32 	%r923, %r3, 1779033703;
	xor.b32  	%r9, %r923, %r903;
	mov.u32 	%r890, 12;
	// begin inline asm
	shf.r.clamp.b32 %r7, %r9, %r9, %r890;
	// end inline asm
	add.s32 	%r924, %r5, %r908;
	add.s32 	%r925, %r924, %r7;
	xor.b32  	%r13, %r925, %r3;
	mov.u32 	%r894, 8;
	// begin inline asm
	shf.r.clamp.b32 %r11, %r13, %r13, %r894;
	// end inline asm
	add.s32 	%r926, %r11, %r923;
	xor.b32  	%r17, %r926, %r7;
	mov.u32 	%r898, 7;
	// begin inline asm
	shf.r.clamp.b32 %r15, %r17, %r17, %r898;
	// end inline asm
	add.s32 	%r927, %r904, %r900;
	add.s32 	%r21, %r927, %r909;
	// begin inline asm
	shf.r.clamp.b32 %r19, %r21, %r21, %r886;
	// end inline asm
	add.s32 	%r928, %r19, -1150833019;
	xor.b32  	%r25, %r928, %r904;
	// begin inline asm
	shf.r.clamp.b32 %r23, %r25, %r25, %r890;
	// end inline asm
	add.s32 	%r929, %r21, %r1;
	add.s32 	%r930, %r929, %r23;
	xor.b32  	%r29, %r930, %r19;
	// begin inline asm
	shf.r.clamp.b32 %r27, %r29, %r29, %r894;
	// end inline asm
	add.s32 	%r931, %r27, %r928;
	xor.b32  	%r33, %r931, %r23;
	// begin inline asm
	shf.r.clamp.b32 %r31, %r33, %r33, %r898;
	// end inline asm
	add.s32 	%r932, %r905, %r901;
	add.s32 	%r933, %r932, %r910;
	xor.b32  	%r37, %r933, 52;
	// begin inline asm
	shf.r.clamp.b32 %r35, %r37, %r37, %r886;
	// end inline asm
	add.s32 	%r934, %r35, 1013904242;
	xor.b32  	%r41, %r934, %r905;
	// begin inline asm
	shf.r.clamp.b32 %r39, %r41, %r41, %r890;
	// end inline asm
	add.s32 	%r935, %r933, %r911;
	add.s32 	%r936, %r935, %r39;
	xor.b32  	%r45, %r936, %r35;
	// begin inline asm
	shf.r.clamp.b32 %r43, %r45, %r45, %r894;
	// end inline asm
	add.s32 	%r937, %r43, %r934;
	xor.b32  	%r49, %r937, %r39;
	// begin inline asm
	shf.r.clamp.b32 %r47, %r49, %r49, %r898;
	// end inline asm
	add.s32 	%r938, %r906, %r902;
	add.s32 	%r939, %r938, %r912;
	xor.b32  	%r53, %r939, 10;
	// begin inline asm
	shf.r.clamp.b32 %r51, %r53, %r53, %r886;
	// end inline asm
	add.s32 	%r940, %r51, -1521486534;
	xor.b32  	%r57, %r940, %r906;
	// begin inline asm
	shf.r.clamp.b32 %r55, %r57, %r57, %r890;
	// end inline asm
	add.s32 	%r941, %r939, %r913;
	add.s32 	%r942, %r941, %r55;
	xor.b32  	%r61, %r942, %r51;
	// begin inline asm
	shf.r.clamp.b32 %r59, %r61, %r61, %r894;
	// end inline asm
	add.s32 	%r943, %r59, %r940;
	xor.b32  	%r65, %r943, %r55;
	// begin inline asm
	shf.r.clamp.b32 %r63, %r65, %r65, %r898;
	// end inline asm
	add.s32 	%r944, %r925, %r914;
	add.s32 	%r945, %r944, %r31;
	xor.b32  	%r69, %r59, %r945;
	// begin inline asm
	shf.r.clamp.b32 %r67, %r69, %r69, %r886;
	// end inline asm
	add.s32 	%r946, %r67, %r937;
	xor.b32  	%r73, %r946, %r31;
	// begin inline asm
	shf.r.clamp.b32 %r71, %r73, %r73, %r890;
	// end inline asm
	add.s32 	%r947, %r945, %r915;
	add.s32 	%r948, %r947, %r71;
	xor.b32  	%r77, %r948, %r67;
	// begin inline asm
	shf.r.clamp.b32 %r75, %r77, %r77, %r894;
	// end inline asm
	add.s32 	%r949, %r75, %r946;
	xor.b32  	%r81, %r949, %r71;
	// begin inline asm
	shf.r.clamp.b32 %r79, %r81, %r81, %r898;
	// end inline asm
	add.s32 	%r950, %r930, %r916;
	add.s32 	%r951, %r950, %r47;
	xor.b32  	%r85, %r951, %r11;
	// begin inline asm
	shf.r.clamp.b32 %r83, %r85, %r85, %r886;
	// end inline asm
	add.s32 	%r952, %r83, %r943;
	xor.b32  	%r89, %r952, %r47;
	// begin inline asm
	shf.r.clamp.b32 %r87, %r89, %r89, %r890;
	// end inline asm
	add.s32 	%r953, %r951, %r917;
	add.s32 	%r954, %r953, %r87;
	xor.b32  	%r93, %r954, %r83;
	// begin inline asm
	shf.r.clamp.b32 %r91, %r93, %r93, %r894;
	// end inline asm
	add.s32 	%r955, %r91, %r952;
	xor.b32  	%r97, %r955, %r87;
	// begin inline asm
	shf.r.clamp.b32 %r95, %r97, %r97, %r898;
	// end inline asm
	add.s32 	%r956, %r936, %r918;
	add.s32 	%r957, %r956, %r63;
	xor.b32  	%r101, %r957, %r27;
	// begin inline asm
	shf.r.clamp.b32 %r99, %r101, %r101, %r886;
	// end inline asm
	add.s32 	%r958, %r99, %r926;
	xor.b32  	%r105, %r958, %r63;
	// begin inline asm
	shf.r.clamp.b32 %r103, %r105, %r105, %r890;
	// end inline asm
	add.s32 	%r959, %r103, %r957;
	xor.b32  	%r109, %r959, %r99;
	// begin inline asm
	shf.r.clamp.b32 %r107, %r109, %r109, %r894;
	// end inline asm
	add.s32 	%r960, %r107, %r958;
	xor.b32  	%r113, %r960, %r103;
	// begin inline asm
	shf.r.clamp.b32 %r111, %r113, %r113, %r898;
	// end inline asm
	add.s32 	%r961, %r942, %r15;
	xor.b32  	%r117, %r961, %r43;
	// begin inline asm
	shf.r.clamp.b32 %r115, %r117, %r117, %r886;
	// end inline asm
	add.s32 	%r962, %r115, %r931;
	xor.b32  	%r121, %r962, %r15;
	// begin inline asm
	shf.r.clamp.b32 %r119, %r121, %r121, %r890;
	// end inline asm
	add.s32 	%r963, %r119, %r961;
	xor.b32  	%r125, %r963, %r115;
	// begin inline asm
	shf.r.clamp.b32 %r123, %r125, %r125, %r894;
	// end inline asm
	add.s32 	%r964, %r123, %r962;
	xor.b32  	%r129, %r964, %r119;
	// begin inline asm
	shf.r.clamp.b32 %r127, %r129, %r129, %r898;
	// end inline asm
	add.s32 	%r965, %r948, %r909;
	add.s32 	%r966, %r965, %r127;
	xor.b32  	%r133, %r966, %r91;
	// begin inline asm
	shf.r.clamp.b32 %r131, %r133, %r133, %r886;
	// end inline asm
	add.s32 	%r967, %r131, %r960;
	xor.b32  	%r137, %r967, %r127;
	// begin inline asm
	shf.r.clamp.b32 %r135, %r137, %r137, %r890;
	// end inline asm
	add.s32 	%r968, %r135, %r912;
	add.s32 	%r969, %r968, %r966;
	xor.b32  	%r141, %r969, %r131;
	// begin inline asm
	shf.r.clamp.b32 %r139, %r141, %r141, %r894;
	// end inline asm
	add.s32 	%r970, %r139, %r967;
	xor.b32  	%r145, %r970, %r135;
	// begin inline asm
	shf.r.clamp.b32 %r143, %r145, %r145, %r898;
	// end inline asm
	add.s32 	%r971, %r79, %r1;
	add.s32 	%r972, %r971, %r954;
	xor.b32  	%r149, %r107, %r972;
	// begin inline asm
	shf.r.clamp.b32 %r147, %r149, %r149, %r886;
	// end inline asm
	add.s32 	%r973, %r147, %r964;
	xor.b32  	%r153, %r973, %r79;
	// begin inline asm
	shf.r.clamp.b32 %r151, %r153, %r153, %r890;
	// end inline asm
	add.s32 	%r974, %r972, %r916;
	add.s32 	%r975, %r974, %r151;
	xor.b32  	%r157, %r975, %r147;
	// begin inline asm
	shf.r.clamp.b32 %r155, %r157, %r157, %r894;
	// end inline asm
	add.s32 	%r976, %r155, %r973;
	xor.b32  	%r161, %r976, %r151;
	// begin inline asm
	shf.r.clamp.b32 %r159, %r161, %r161, %r898;
	// end inline asm
	add.s32 	%r977, %r95, %r913;
	add.s32 	%r978, %r977, %r959;
	xor.b32  	%r165, %r123, %r978;
	// begin inline asm
	shf.r.clamp.b32 %r163, %r165, %r165, %r886;
	// end inline asm
	add.s32 	%r979, %r163, %r949;
	xor.b32  	%r169, %r979, %r95;
	// begin inline asm
	shf.r.clamp.b32 %r167, %r169, %r169, %r890;
	// end inline asm
	add.s32 	%r980, %r978, %r907;
	add.s32 	%r981, %r980, %r167;
	xor.b32  	%r173, %r981, %r163;
	// begin inline asm
	shf.r.clamp.b32 %r171, %r173, %r173, %r894;
	// end inline asm
	add.s32 	%r982, %r171, %r979;
	xor.b32  	%r177, %r982, %r167;
	// begin inline asm
	shf.r.clamp.b32 %r175, %r177, %r177, %r898;
	// end inline asm
	add.s32 	%r983, %r111, %r910;
	add.s32 	%r984, %r983, %r963;
	xor.b32  	%r181, %r984, %r75;
	// begin inline asm
	shf.r.clamp.b32 %r179, %r181, %r181, %r886;
	// end inline asm
	add.s32 	%r985, %r179, %r955;
	xor.b32  	%r185, %r985, %r111;
	// begin inline asm
	shf.r.clamp.b32 %r183, %r185, %r185, %r890;
	// end inline asm
	add.s32 	%r986, %r183, %r984;
	xor.b32  	%r189, %r986, %r179;
	// begin inline asm
	shf.r.clamp.b32 %r187, %r189, %r189, %r894;
	// end inline asm
	add.s32 	%r987, %r187, %r985;
	xor.b32  	%r193, %r987, %r183;
	// begin inline asm
	shf.r.clamp.b32 %r191, %r193, %r193, %r898;
	// end inline asm
	add.s32 	%r988, %r969, %r908;
	add.s32 	%r989, %r988, %r159;
	xor.b32  	%r197, %r187, %r989;
	// begin inline asm
	shf.r.clamp.b32 %r195, %r197, %r197, %r886;
	// end inline asm
	add.s32 	%r990, %r195, %r982;
	xor.b32  	%r201, %r990, %r159;
	// begin inline asm
	shf.r.clamp.b32 %r199, %r201, %r201, %r890;
	// end inline asm
	add.s32 	%r991, %r989, %r917;
	add.s32 	%r992, %r991, %r199;
	xor.b32  	%r205, %r992, %r195;
	// begin inline asm
	shf.r.clamp.b32 %r203, %r205, %r205, %r894;
	// end inline asm
	add.s32 	%r993, %r203, %r990;
	xor.b32  	%r209, %r993, %r199;
	// begin inline asm
	shf.r.clamp.b32 %r207, %r209, %r209, %r898;
	// end inline asm
	add.s32 	%r994, %r975, %r918;
	add.s32 	%r995, %r994, %r175;
	xor.b32  	%r213, %r995, %r139;
	// begin inline asm
	shf.r.clamp.b32 %r211, %r213, %r213, %r886;
	// end inline asm
	add.s32 	%r996, %r211, %r987;
	xor.b32  	%r217, %r996, %r175;
	// begin inline asm
	shf.r.clamp.b32 %r215, %r217, %r217, %r890;
	// end inline asm
	add.s32 	%r997, %r995, %r911;
	add.s32 	%r998, %r997, %r215;
	xor.b32  	%r221, %r998, %r211;
	// begin inline asm
	shf.r.clamp.b32 %r219, %r221, %r221, %r894;
	// end inline asm
	add.s32 	%r999, %r219, %r996;
	xor.b32  	%r225, %r999, %r215;
	// begin inline asm
	shf.r.clamp.b32 %r223, %r225, %r225, %r898;
	// end inline asm
	add.s32 	%r1000, %r981, %r915;
	add.s32 	%r1001, %r1000, %r191;
	xor.b32  	%r229, %r1001, %r155;
	// begin inline asm
	shf.r.clamp.b32 %r227, %r229, %r229, %r886;
	// end inline asm
	add.s32 	%r1002, %r227, %r970;
	xor.b32  	%r233, %r1002, %r191;
	// begin inline asm
	shf.r.clamp.b32 %r231, %r233, %r233, %r890;
	// end inline asm
	add.s32 	%r1003, %r231, %r1001;
	xor.b32  	%r237, %r1003, %r227;
	// begin inline asm
	shf.r.clamp.b32 %r235, %r237, %r237, %r894;
	// end inline asm
	add.s32 	%r1004, %r235, %r1002;
	xor.b32  	%r241, %r1004, %r231;
	// begin inline asm
	shf.r.clamp.b32 %r239, %r241, %r241, %r898;
	// end inline asm
	add.s32 	%r1005, %r986, %r143;
	xor.b32  	%r245, %r1005, %r171;
	// begin inline asm
	shf.r.clamp.b32 %r243, %r245, %r245, %r886;
	// end inline asm
	add.s32 	%r1006, %r243, %r976;
	xor.b32  	%r249, %r1006, %r143;
	// begin inline asm
	shf.r.clamp.b32 %r247, %r249, %r249, %r890;
	// end inline asm
	add.s32 	%r1007, %r1005, %r914;
	add.s32 	%r1008, %r1007, %r247;
	xor.b32  	%r253, %r1008, %r243;
	// begin inline asm
	shf.r.clamp.b32 %r251, %r253, %r253, %r894;
	// end inline asm
	add.s32 	%r1009, %r251, %r1006;
	xor.b32  	%r257, %r1009, %r247;
	// begin inline asm
	shf.r.clamp.b32 %r255, %r257, %r257, %r898;
	// end inline asm
	add.s32 	%r1010, %r992, %r1;
	add.s32 	%r1011, %r1010, %r255;
	xor.b32  	%r261, %r1011, %r219;
	// begin inline asm
	shf.r.clamp.b32 %r259, %r261, %r261, %r886;
	// end inline asm
	add.s32 	%r1012, %r259, %r1004;
	xor.b32  	%r265, %r1012, %r255;
	// begin inline asm
	shf.r.clamp.b32 %r263, %r265, %r265, %r890;
	// end inline asm
	add.s32 	%r1013, %r263, %r910;
	add.s32 	%r1014, %r1013, %r1011;
	xor.b32  	%r269, %r1014, %r259;
	// begin inline asm
	shf.r.clamp.b32 %r267, %r269, %r269, %r894;
	// end inline asm
	add.s32 	%r1015, %r267, %r1012;
	xor.b32  	%r273, %r1015, %r263;
	// begin inline asm
	shf.r.clamp.b32 %r271, %r273, %r273, %r898;
	// end inline asm
	add.s32 	%r1016, %r207, %r916;
	add.s32 	%r1017, %r1016, %r998;
	xor.b32  	%r277, %r235, %r1017;
	// begin inline asm
	shf.r.clamp.b32 %r275, %r277, %r277, %r886;
	// end inline asm
	add.s32 	%r1018, %r275, %r1009;
	xor.b32  	%r281, %r1018, %r207;
	// begin inline asm
	shf.r.clamp.b32 %r279, %r281, %r281, %r890;
	// end inline asm
	add.s32 	%r1019, %r1017, %r918;
	add.s32 	%r1020, %r1019, %r279;
	xor.b32  	%r285, %r1020, %r275;
	// begin inline asm
	shf.r.clamp.b32 %r283, %r285, %r285, %r894;
	// end inline asm
	add.s32 	%r1021, %r283, %r1018;
	xor.b32  	%r289, %r1021, %r279;
	// begin inline asm
	shf.r.clamp.b32 %r287, %r289, %r289, %r898;
	// end inline asm
	add.s32 	%r1022, %r1003, %r223;
	xor.b32  	%r293, %r251, %r1022;
	// begin inline asm
	shf.r.clamp.b32 %r291, %r293, %r293, %r886;
	// end inline asm
	add.s32 	%r1023, %r291, %r993;
	xor.b32  	%r297, %r1023, %r223;
	// begin inline asm
	shf.r.clamp.b32 %r295, %r297, %r297, %r890;
	// end inline asm
	add.s32 	%r1024, %r1022, %r909;
	add.s32 	%r1025, %r1024, %r295;
	xor.b32  	%r301, %r1025, %r291;
	// begin inline asm
	shf.r.clamp.b32 %r299, %r301, %r301, %r894;
	// end inline asm
	add.s32 	%r1026, %r299, %r1023;
	xor.b32  	%r305, %r1026, %r295;
	// begin inline asm
	shf.r.clamp.b32 %r303, %r305, %r305, %r898;
	// end inline asm
	add.s32 	%r1027, %r239, %r913;
	add.s32 	%r1028, %r1027, %r1008;
	xor.b32  	%r309, %r1028, %r203;
	// begin inline asm
	shf.r.clamp.b32 %r307, %r309, %r309, %r886;
	// end inline asm
	add.s32 	%r1029, %r307, %r999;
	xor.b32  	%r313, %r1029, %r239;
	// begin inline asm
	shf.r.clamp.b32 %r311, %r313, %r313, %r890;
	// end inline asm
	add.s32 	%r1030, %r311, %r1028;
	xor.b32  	%r317, %r1030, %r307;
	// begin inline asm
	shf.r.clamp.b32 %r315, %r317, %r317, %r894;
	// end inline asm
	add.s32 	%r1031, %r315, %r1029;
	xor.b32  	%r321, %r1031, %r311;
	// begin inline asm
	shf.r.clamp.b32 %r319, %r321, %r321, %r898;
	// end inline asm
	add.s32 	%r1032, %r1014, %r912;
	add.s32 	%r1033, %r1032, %r287;
	xor.b32  	%r325, %r315, %r1033;
	// begin inline asm
	shf.r.clamp.b32 %r323, %r325, %r325, %r886;
	// end inline asm
	add.s32 	%r1034, %r323, %r1026;
	xor.b32  	%r329, %r1034, %r287;
	// begin inline asm
	shf.r.clamp.b32 %r327, %r329, %r329, %r890;
	// end inline asm
	add.s32 	%r1035, %r1033, %r911;
	add.s32 	%r1036, %r1035, %r327;
	xor.b32  	%r333, %r1036, %r323;
	// begin inline asm
	shf.r.clamp.b32 %r331, %r333, %r333, %r894;
	// end inline asm
	add.s32 	%r1037, %r331, %r1034;
	xor.b32  	%r337, %r1037, %r327;
	// begin inline asm
	shf.r.clamp.b32 %r335, %r337, %r337, %r898;
	// end inline asm
	add.s32 	%r1038, %r1020, %r915;
	add.s32 	%r1039, %r1038, %r303;
	xor.b32  	%r341, %r1039, %r267;
	// begin inline asm
	shf.r.clamp.b32 %r339, %r341, %r341, %r886;
	// end inline asm
	add.s32 	%r1040, %r339, %r1031;
	xor.b32  	%r345, %r1040, %r303;
	// begin inline asm
	shf.r.clamp.b32 %r343, %r345, %r345, %r890;
	// end inline asm
	add.s32 	%r1041, %r1039, %r907;
	add.s32 	%r1042, %r1041, %r343;
	xor.b32  	%r349, %r1042, %r339;
	// begin inline asm
	shf.r.clamp.b32 %r347, %r349, %r349, %r894;
	// end inline asm
	add.s32 	%r1043, %r347, %r1040;
	xor.b32  	%r353, %r1043, %r343;
	// begin inline asm
	shf.r.clamp.b32 %r351, %r353, %r353, %r898;
	// end inline asm
	add.s32 	%r1044, %r1025, %r917;
	add.s32 	%r1045, %r1044, %r319;
	xor.b32  	%r357, %r1045, %r283;
	// begin inline asm
	shf.r.clamp.b32 %r355, %r357, %r357, %r886;
	// end inline asm
	add.s32 	%r1046, %r355, %r1015;
	xor.b32  	%r361, %r1046, %r319;
	// begin inline asm
	shf.r.clamp.b32 %r359, %r361, %r361, %r890;
	// end inline asm
	add.s32 	%r1047, %r359, %r1045;
	xor.b32  	%r365, %r1047, %r355;
	// begin inline asm
	shf.r.clamp.b32 %r363, %r365, %r365, %r894;
	// end inline asm
	add.s32 	%r1048, %r363, %r1046;
	xor.b32  	%r369, %r1048, %r359;
	// begin inline asm
	shf.r.clamp.b32 %r367, %r369, %r369, %r898;
	// end inline asm
	add.s32 	%r1049, %r271, %r914;
	add.s32 	%r1050, %r1049, %r1030;
	xor.b32  	%r373, %r1050, %r299;
	// begin inline asm
	shf.r.clamp.b32 %r371, %r373, %r373, %r886;
	// end inline asm
	add.s32 	%r1051, %r371, %r1021;
	xor.b32  	%r377, %r1051, %r271;
	// begin inline asm
	shf.r.clamp.b32 %r375, %r377, %r377, %r890;
	// end inline asm
	add.s32 	%r1052, %r1050, %r908;
	add.s32 	%r1053, %r1052, %r375;
	xor.b32  	%r381, %r1053, %r371;
	// begin inline asm
	shf.r.clamp.b32 %r379, %r381, %r381, %r894;
	// end inline asm
	add.s32 	%r1054, %r379, %r1051;
	xor.b32  	%r385, %r1054, %r375;
	// begin inline asm
	shf.r.clamp.b32 %r383, %r385, %r385, %r898;
	// end inline asm
	add.s32 	%r1055, %r1036, %r916;
	add.s32 	%r1056, %r1055, %r383;
	xor.b32  	%r389, %r1056, %r347;
	// begin inline asm
	shf.r.clamp.b32 %r387, %r389, %r389, %r886;
	// end inline asm
	add.s32 	%r1057, %r387, %r1048;
	xor.b32  	%r393, %r1057, %r383;
	// begin inline asm
	shf.r.clamp.b32 %r391, %r393, %r393, %r890;
	// end inline asm
	add.s32 	%r1058, %r391, %r913;
	add.s32 	%r1059, %r1058, %r1056;
	xor.b32  	%r397, %r1059, %r387;
	// begin inline asm
	shf.r.clamp.b32 %r395, %r397, %r397, %r894;
	// end inline asm
	add.s32 	%r1060, %r395, %r1057;
	xor.b32  	%r401, %r1060, %r391;
	// begin inline asm
	shf.r.clamp.b32 %r399, %r401, %r401, %r898;
	// end inline asm
	add.s32 	%r1061, %r335, %r918;
	add.s32 	%r1062, %r1061, %r1042;
	xor.b32  	%r405, %r363, %r1062;
	// begin inline asm
	shf.r.clamp.b32 %r403, %r405, %r405, %r886;
	// end inline asm
	add.s32 	%r1063, %r403, %r1054;
	xor.b32  	%r409, %r1063, %r335;
	// begin inline asm
	shf.r.clamp.b32 %r407, %r409, %r409, %r890;
	// end inline asm
	add.s32 	%r1064, %r1062, %r915;
	add.s32 	%r1065, %r1064, %r407;
	xor.b32  	%r413, %r1065, %r403;
	// begin inline asm
	shf.r.clamp.b32 %r411, %r413, %r413, %r894;
	// end inline asm
	add.s32 	%r1066, %r411, %r1063;
	xor.b32  	%r417, %r1066, %r407;
	// begin inline asm
	shf.r.clamp.b32 %r415, %r417, %r417, %r898;
	// end inline asm
	add.s32 	%r1067, %r1047, %r351;
	xor.b32  	%r421, %r379, %r1067;
	// begin inline asm
	shf.r.clamp.b32 %r419, %r421, %r421, %r886;
	// end inline asm
	add.s32 	%r1068, %r419, %r1037;
	xor.b32  	%r425, %r1068, %r351;
	// begin inline asm
	shf.r.clamp.b32 %r423, %r425, %r425, %r890;
	// end inline asm
	add.s32 	%r1069, %r1067, %r1;
	add.s32 	%r1070, %r1069, %r423;
	xor.b32  	%r429, %r1070, %r419;
	// begin inline asm
	shf.r.clamp.b32 %r427, %r429, %r429, %r894;
	// end inline asm
	add.s32 	%r1071, %r427, %r1068;
	xor.b32  	%r433, %r1071, %r423;
	// begin inline asm
	shf.r.clamp.b32 %r431, %r433, %r433, %r898;
	// end inline asm
	add.s32 	%r1072, %r1053, %r367;
	xor.b32  	%r437, %r1072, %r331;
	// begin inline asm
	shf.r.clamp.b32 %r435, %r437, %r437, %r886;
	// end inline asm
	add.s32 	%r1073, %r435, %r1043;
	xor.b32  	%r441, %r1073, %r367;
	// begin inline asm
	shf.r.clamp.b32 %r439, %r441, %r441, %r890;
	// end inline asm
	add.s32 	%r1074, %r439, %r1072;
	xor.b32  	%r445, %r1074, %r435;
	// begin inline asm
	shf.r.clamp.b32 %r443, %r445, %r445, %r894;
	// end inline asm
	add.s32 	%r1075, %r443, %r1073;
	xor.b32  	%r449, %r1075, %r439;
	// begin inline asm
	shf.r.clamp.b32 %r447, %r449, %r449, %r898;
	// end inline asm
	add.s32 	%r1076, %r1059, %r910;
	add.s32 	%r1077, %r1076, %r415;
	xor.b32  	%r453, %r443, %r1077;
	// begin inline asm
	shf.r.clamp.b32 %r451, %r453, %r453, %r886;
	// end inline asm
	add.s32 	%r1078, %r451, %r1071;
	xor.b32  	%r457, %r1078, %r415;
	// begin inline asm
	shf.r.clamp.b32 %r455, %r457, %r457, %r890;
	// end inline asm
	add.s32 	%r1079, %r1077, %r907;
	add.s32 	%r1080, %r1079, %r455;
	xor.b32  	%r461, %r1080, %r451;
	// begin inline asm
	shf.r.clamp.b32 %r459, %r461, %r461, %r894;
	// end inline asm
	add.s32 	%r1081, %r459, %r1078;
	xor.b32  	%r465, %r1081, %r455;
	// begin inline asm
	shf.r.clamp.b32 %r463, %r465, %r465, %r898;
	// end inline asm
	add.s32 	%r1082, %r1065, %r917;
	add.s32 	%r1083, %r1082, %r431;
	xor.b32  	%r469, %r1083, %r395;
	// begin inline asm
	shf.r.clamp.b32 %r467, %r469, %r469, %r886;
	// end inline asm
	add.s32 	%r1084, %r467, %r1075;
	xor.b32  	%r473, %r1084, %r431;
	// begin inline asm
	shf.r.clamp.b32 %r471, %r473, %r473, %r890;
	// end inline asm
	add.s32 	%r1085, %r1083, %r909;
	add.s32 	%r1086, %r1085, %r471;
	xor.b32  	%r477, %r1086, %r467;
	// begin inline asm
	shf.r.clamp.b32 %r475, %r477, %r477, %r894;
	// end inline asm
	add.s32 	%r1087, %r475, %r1084;
	xor.b32  	%r481, %r1087, %r471;
	// begin inline asm
	shf.r.clamp.b32 %r479, %r481, %r481, %r898;
	// end inline asm
	add.s32 	%r1088, %r1070, %r911;
	add.s32 	%r1089, %r1088, %r447;
	xor.b32  	%r485, %r1089, %r411;
	// begin inline asm
	shf.r.clamp.b32 %r483, %r485, %r485, %r886;
	// end inline asm
	add.s32 	%r1090, %r483, %r1060;
	xor.b32  	%r489, %r1090, %r447;
	// begin inline asm
	shf.r.clamp.b32 %r487, %r489, %r489, %r890;
	// end inline asm
	add.s32 	%r1091, %r1089, %r914;
	add.s32 	%r1092, %r1091, %r487;
	xor.b32  	%r493, %r1092, %r483;
	// begin inline asm
	shf.r.clamp.b32 %r491, %r493, %r493, %r894;
	// end inline asm
	add.s32 	%r1093, %r491, %r1090;
	xor.b32  	%r497, %r1093, %r487;
	// begin inline asm
	shf.r.clamp.b32 %r495, %r497, %r497, %r898;
	// end inline asm
	add.s32 	%r1094, %r399, %r908;
	add.s32 	%r1095, %r1094, %r1074;
	xor.b32  	%r501, %r1095, %r427;
	// begin inline asm
	shf.r.clamp.b32 %r499, %r501, %r501, %r886;
	// end inline asm
	add.s32 	%r1096, %r499, %r1066;
	xor.b32  	%r505, %r1096, %r399;
	// begin inline asm
	shf.r.clamp.b32 %r503, %r505, %r505, %r890;
	// end inline asm
	add.s32 	%r1097, %r1095, %r912;
	add.s32 	%r1098, %r1097, %r503;
	xor.b32  	%r509, %r1098, %r499;
	// begin inline asm
	shf.r.clamp.b32 %r507, %r509, %r509, %r894;
	// end inline asm
	add.s32 	%r1099, %r507, %r1096;
	xor.b32  	%r513, %r1099, %r503;
	// begin inline asm
	shf.r.clamp.b32 %r511, %r513, %r513, %r898;
	// end inline asm
	add.s32 	%r1100, %r1080, %r918;
	add.s32 	%r1101, %r1100, %r511;
	xor.b32  	%r517, %r1101, %r475;
	// begin inline asm
	shf.r.clamp.b32 %r515, %r517, %r517, %r886;
	// end inline asm
	add.s32 	%r1102, %r515, %r1093;
	xor.b32  	%r521, %r1102, %r511;
	// begin inline asm
	shf.r.clamp.b32 %r519, %r521, %r521, %r890;
	// end inline asm
	add.s32 	%r1103, %r1101, %r519;
	xor.b32  	%r525, %r1103, %r515;
	// begin inline asm
	shf.r.clamp.b32 %r523, %r525, %r525, %r894;
	// end inline asm
	add.s32 	%r1104, %r523, %r1102;
	xor.b32  	%r529, %r1104, %r519;
	// begin inline asm
	shf.r.clamp.b32 %r527, %r529, %r529, %r898;
	// end inline asm
	add.s32 	%r1105, %r463, %r915;
	add.s32 	%r1106, %r1105, %r1086;
	xor.b32  	%r533, %r491, %r1106;
	// begin inline asm
	shf.r.clamp.b32 %r531, %r533, %r533, %r886;
	// end inline asm
	add.s32 	%r1107, %r531, %r1099;
	xor.b32  	%r537, %r1107, %r463;
	// begin inline asm
	shf.r.clamp.b32 %r535, %r537, %r537, %r890;
	// end inline asm
	add.s32 	%r1108, %r1106, %r917;
	add.s32 	%r1109, %r1108, %r535;
	xor.b32  	%r541, %r1109, %r531;
	// begin inline asm
	shf.r.clamp.b32 %r539, %r541, %r541, %r894;
	// end inline asm
	add.s32 	%r1110, %r539, %r1107;
	xor.b32  	%r545, %r1110, %r535;
	// begin inline asm
	shf.r.clamp.b32 %r543, %r545, %r545, %r898;
	// end inline asm
	add.s32 	%r1111, %r1092, %r479;
	xor.b32  	%r549, %r507, %r1111;
	// begin inline asm
	shf.r.clamp.b32 %r547, %r549, %r549, %r886;
	// end inline asm
	add.s32 	%r1112, %r547, %r1081;
	xor.b32  	%r553, %r1112, %r479;
	// begin inline asm
	shf.r.clamp.b32 %r551, %r553, %r553, %r890;
	// end inline asm
	add.s32 	%r1113, %r1111, %r916;
	add.s32 	%r1114, %r1113, %r551;
	xor.b32  	%r557, %r1114, %r547;
	// begin inline asm
	shf.r.clamp.b32 %r555, %r557, %r557, %r894;
	// end inline asm
	add.s32 	%r1115, %r555, %r1112;
	xor.b32  	%r561, %r1115, %r551;
	// begin inline asm
	shf.r.clamp.b32 %r559, %r561, %r561, %r898;
	// end inline asm
	add.s32 	%r1116, %r1098, %r495;
	xor.b32  	%r565, %r1116, %r459;
	// begin inline asm
	shf.r.clamp.b32 %r563, %r565, %r565, %r886;
	// end inline asm
	add.s32 	%r1117, %r563, %r1087;
	xor.b32  	%r569, %r1117, %r495;
	// begin inline asm
	shf.r.clamp.b32 %r567, %r569, %r569, %r890;
	// end inline asm
	add.s32 	%r1118, %r1116, %r914;
	add.s32 	%r1119, %r1118, %r567;
	xor.b32  	%r573, %r1119, %r563;
	// begin inline asm
	shf.r.clamp.b32 %r571, %r573, %r573, %r894;
	// end inline asm
	add.s32 	%r1120, %r571, %r1117;
	xor.b32  	%r577, %r1120, %r567;
	// begin inline asm
	shf.r.clamp.b32 %r575, %r577, %r577, %r898;
	// end inline asm
	add.s32 	%r1121, %r1103, %r913;
	add.s32 	%r1122, %r1121, %r543;
	xor.b32  	%r581, %r571, %r1122;
	// begin inline asm
	shf.r.clamp.b32 %r579, %r581, %r581, %r886;
	// end inline asm
	add.s32 	%r1123, %r579, %r1115;
	xor.b32  	%r585, %r1123, %r543;
	// begin inline asm
	shf.r.clamp.b32 %r583, %r585, %r585, %r890;
	// end inline asm
	add.s32 	%r1124, %r1122, %r909;
	add.s32 	%r1125, %r1124, %r583;
	xor.b32  	%r589, %r1125, %r579;
	// begin inline asm
	shf.r.clamp.b32 %r587, %r589, %r589, %r894;
	// end inline asm
	add.s32 	%r1126, %r587, %r1123;
	xor.b32  	%r593, %r1126, %r583;
	// begin inline asm
	shf.r.clamp.b32 %r591, %r593, %r593, %r898;
	// end inline asm
	add.s32 	%r1127, %r1109, %r911;
	add.s32 	%r1128, %r1127, %r559;
	xor.b32  	%r597, %r1128, %r523;
	// begin inline asm
	shf.r.clamp.b32 %r595, %r597, %r597, %r886;
	// end inline asm
	add.s32 	%r1129, %r595, %r1120;
	xor.b32  	%r601, %r1129, %r559;
	// begin inline asm
	shf.r.clamp.b32 %r599, %r601, %r601, %r890;
	// end inline asm
	add.s32 	%r1130, %r1128, %r1;
	add.s32 	%r1131, %r1130, %r599;
	xor.b32  	%r605, %r1131, %r595;
	// begin inline asm
	shf.r.clamp.b32 %r603, %r605, %r605, %r894;
	// end inline asm
	add.s32 	%r1132, %r603, %r1129;
	xor.b32  	%r609, %r1132, %r599;
	// begin inline asm
	shf.r.clamp.b32 %r607, %r609, %r609, %r898;
	// end inline asm
	add.s32 	%r1133, %r1114, %r907;
	add.s32 	%r1134, %r1133, %r575;
	xor.b32  	%r613, %r1134, %r539;
	// begin inline asm
	shf.r.clamp.b32 %r611, %r613, %r613, %r886;
	// end inline asm
	add.s32 	%r1135, %r611, %r1104;
	xor.b32  	%r617, %r1135, %r575;
	// begin inline asm
	shf.r.clamp.b32 %r615, %r617, %r617, %r890;
	// end inline asm
	add.s32 	%r1136, %r1134, %r908;
	add.s32 	%r1137, %r1136, %r615;
	xor.b32  	%r621, %r1137, %r611;
	// begin inline asm
	shf.r.clamp.b32 %r619, %r621, %r621, %r894;
	// end inline asm
	add.s32 	%r1138, %r619, %r1135;
	xor.b32  	%r625, %r1138, %r615;
	// begin inline asm
	shf.r.clamp.b32 %r623, %r625, %r625, %r898;
	// end inline asm
	add.s32 	%r1139, %r527, %r912;
	add.s32 	%r1140, %r1139, %r1119;
	xor.b32  	%r629, %r1140, %r555;
	// begin inline asm
	shf.r.clamp.b32 %r627, %r629, %r629, %r886;
	// end inline asm
	add.s32 	%r1141, %r627, %r1110;
	xor.b32  	%r633, %r1141, %r527;
	// begin inline asm
	shf.r.clamp.b32 %r631, %r633, %r633, %r890;
	// end inline asm
	add.s32 	%r1142, %r1140, %r910;
	add.s32 	%r1143, %r1142, %r631;
	xor.b32  	%r637, %r1143, %r627;
	// begin inline asm
	shf.r.clamp.b32 %r635, %r637, %r637, %r894;
	// end inline asm
	add.s32 	%r1144, %r635, %r1141;
	xor.b32  	%r641, %r1144, %r631;
	// begin inline asm
	shf.r.clamp.b32 %r639, %r641, %r641, %r898;
	// end inline asm
	add.s32 	%r1145, %r1125, %r915;
	add.s32 	%r1146, %r1145, %r639;
	xor.b32  	%r645, %r1146, %r603;
	// begin inline asm
	shf.r.clamp.b32 %r643, %r645, %r645, %r886;
	// end inline asm
	add.s32 	%r1147, %r643, %r1138;
	xor.b32  	%r649, %r1147, %r639;
	// begin inline asm
	shf.r.clamp.b32 %r647, %r649, %r649, %r890;
	// end inline asm
	add.s32 	%r1148, %r1146, %r647;
	xor.b32  	%r653, %r1148, %r643;
	// begin inline asm
	shf.r.clamp.b32 %r651, %r653, %r653, %r894;
	// end inline asm
	add.s32 	%r1149, %r651, %r1147;
	xor.b32  	%r657, %r1149, %r647;
	// begin inline asm
	shf.r.clamp.b32 %r655, %r657, %r657, %r898;
	// end inline asm
	add.s32 	%r1150, %r591, %r917;
	add.s32 	%r1151, %r1150, %r1131;
	xor.b32  	%r661, %r619, %r1151;
	// begin inline asm
	shf.r.clamp.b32 %r659, %r661, %r661, %r886;
	// end inline asm
	add.s32 	%r1152, %r659, %r1144;
	xor.b32  	%r665, %r1152, %r591;
	// begin inline asm
	shf.r.clamp.b32 %r663, %r665, %r665, %r890;
	// end inline asm
	add.s32 	%r1153, %r1151, %r911;
	add.s32 	%r1154, %r1153, %r663;
	xor.b32  	%r669, %r1154, %r659;
	// begin inline asm
	shf.r.clamp.b32 %r667, %r669, %r669, %r894;
	// end inline asm
	add.s32 	%r1155, %r667, %r1152;
	xor.b32  	%r673, %r1155, %r663;
	// begin inline asm
	shf.r.clamp.b32 %r671, %r673, %r673, %r898;
	// end inline asm
	add.s32 	%r1156, %r607, %r914;
	add.s32 	%r1157, %r1156, %r1137;
	xor.b32  	%r677, %r635, %r1157;
	// begin inline asm
	shf.r.clamp.b32 %r675, %r677, %r677, %r886;
	// end inline asm
	add.s32 	%r1158, %r675, %r1126;
	xor.b32  	%r681, %r1158, %r607;
	// begin inline asm
	shf.r.clamp.b32 %r679, %r681, %r681, %r890;
	// end inline asm
	add.s32 	%r1159, %r1157, %r918;
	add.s32 	%r1160, %r1159, %r679;
	xor.b32  	%r685, %r1160, %r675;
	// begin inline asm
	shf.r.clamp.b32 %r683, %r685, %r685, %r894;
	// end inline asm
	add.s32 	%r1161, %r683, %r1158;
	xor.b32  	%r689, %r1161, %r679;
	// begin inline asm
	shf.r.clamp.b32 %r687, %r689, %r689, %r898;
	// end inline asm
	add.s32 	%r1162, %r1143, %r623;
	xor.b32  	%r693, %r1162, %r587;
	// begin inline asm
	shf.r.clamp.b32 %r691, %r693, %r693, %r886;
	// end inline asm
	add.s32 	%r1163, %r691, %r1132;
	xor.b32  	%r697, %r1163, %r623;
	// begin inline asm
	shf.r.clamp.b32 %r695, %r697, %r697, %r890;
	// end inline asm
	add.s32 	%r1164, %r1162, %r908;
	add.s32 	%r1165, %r1164, %r695;
	xor.b32  	%r701, %r1165, %r691;
	// begin inline asm
	shf.r.clamp.b32 %r699, %r701, %r701, %r894;
	// end inline asm
	add.s32 	%r1166, %r699, %r1163;
	xor.b32  	%r705, %r1166, %r695;
	// begin inline asm
	shf.r.clamp.b32 %r703, %r705, %r705, %r898;
	// end inline asm
	add.s32 	%r1167, %r671, %r1148;
	xor.b32  	%r709, %r699, %r1167;
	// begin inline asm
	shf.r.clamp.b32 %r707, %r709, %r709, %r886;
	// end inline asm
	add.s32 	%r1168, %r707, %r1161;
	xor.b32  	%r713, %r1168, %r671;
	// begin inline asm
	shf.r.clamp.b32 %r711, %r713, %r713, %r890;
	// end inline asm
	add.s32 	%r1169, %r1167, %r1;
	add.s32 	%r1170, %r1169, %r711;
	xor.b32  	%r717, %r1170, %r707;
	// begin inline asm
	shf.r.clamp.b32 %r715, %r717, %r717, %r894;
	// end inline asm
	add.s32 	%r1171, %r715, %r1168;
	xor.b32  	%r721, %r1171, %r711;
	// begin inline asm
	shf.r.clamp.b32 %r719, %r721, %r721, %r898;
	// end inline asm
	add.s32 	%r1172, %r1154, %r907;
	add.s32 	%r1173, %r1172, %r687;
	xor.b32  	%r725, %r1173, %r651;
	// begin inline asm
	shf.r.clamp.b32 %r723, %r725, %r725, %r886;
	// end inline asm
	add.s32 	%r1174, %r723, %r1166;
	xor.b32  	%r729, %r1174, %r687;
	// begin inline asm
	shf.r.clamp.b32 %r727, %r729, %r729, %r890;
	// end inline asm
	add.s32 	%r1175, %r1173, %r916;
	add.s32 	%r1176, %r1175, %r727;
	xor.b32  	%r733, %r1176, %r723;
	// begin inline asm
	shf.r.clamp.b32 %r731, %r733, %r733, %r894;
	// end inline asm
	add.s32 	%r1177, %r731, %r1174;
	xor.b32  	%r737, %r1177, %r727;
	// begin inline asm
	shf.r.clamp.b32 %r735, %r737, %r737, %r898;
	// end inline asm
	add.s32 	%r1178, %r1160, %r909;
	add.s32 	%r1179, %r1178, %r703;
	xor.b32  	%r741, %r1179, %r667;
	// begin inline asm
	shf.r.clamp.b32 %r739, %r741, %r741, %r886;
	// end inline asm
	add.s32 	%r1180, %r739, %r1149;
	xor.b32  	%r745, %r1180, %r703;
	// begin inline asm
	shf.r.clamp.b32 %r743, %r745, %r745, %r890;
	// end inline asm
	add.s32 	%r1181, %r1179, %r912;
	add.s32 	%r1182, %r1181, %r743;
	xor.b32  	%r749, %r1182, %r739;
	// begin inline asm
	shf.r.clamp.b32 %r747, %r749, %r749, %r894;
	// end inline asm
	add.s32 	%r1183, %r747, %r1180;
	xor.b32  	%r753, %r1183, %r743;
	// begin inline asm
	shf.r.clamp.b32 %r751, %r753, %r753, %r898;
	// end inline asm
	add.s32 	%r1184, %r655, %r910;
	add.s32 	%r1185, %r1184, %r1165;
	xor.b32  	%r757, %r1185, %r683;
	// begin inline asm
	shf.r.clamp.b32 %r755, %r757, %r757, %r886;
	// end inline asm
	add.s32 	%r1186, %r755, %r1155;
	xor.b32  	%r761, %r1186, %r655;
	// begin inline asm
	shf.r.clamp.b32 %r759, %r761, %r761, %r890;
	// end inline asm
	add.s32 	%r1187, %r1185, %r913;
	add.s32 	%r1188, %r1187, %r759;
	xor.b32  	%r765, %r1188, %r755;
	// begin inline asm
	shf.r.clamp.b32 %r763, %r765, %r765, %r894;
	// end inline asm
	add.s32 	%r1189, %r763, %r1186;
	xor.b32  	%r769, %r1189, %r759;
	// begin inline asm
	shf.r.clamp.b32 %r767, %r769, %r769, %r898;
	// end inline asm
	add.s32 	%r1190, %r1170, %r917;
	add.s32 	%r1191, %r1190, %r767;
	xor.b32  	%r773, %r1191, %r731;
	// begin inline asm
	shf.r.clamp.b32 %r771, %r773, %r773, %r886;
	// end inline asm
	add.s32 	%r1192, %r771, %r1183;
	xor.b32  	%r777, %r1192, %r767;
	// begin inline asm
	shf.r.clamp.b32 %r775, %r777, %r777, %r890;
	// end inline asm
	add.s32 	%r1193, %r1191, %r775;
	xor.b32  	%r781, %r1193, %r771;
	// begin inline asm
	shf.r.clamp.b32 %r779, %r781, %r781, %r894;
	// end inline asm
	add.s32 	%r1194, %r779, %r1192;
	xor.b32  	%r785, %r1194, %r775;
	// begin inline asm
	shf.r.clamp.b32 %r783, %r785, %r785, %r898;
	// end inline asm
	add.s32 	%r1195, %r719, %r911;
	add.s32 	%r1196, %r1195, %r1176;
	xor.b32  	%r789, %r747, %r1196;
	// begin inline asm
	shf.r.clamp.b32 %r787, %r789, %r789, %r886;
	// end inline asm
	add.s32 	%r1197, %r787, %r1189;
	xor.b32  	%r793, %r1197, %r719;
	// begin inline asm
	shf.r.clamp.b32 %r791, %r793, %r793, %r890;
	// end inline asm
	add.s32 	%r1198, %r1196, %r907;
	add.s32 	%r1199, %r1198, %r791;
	xor.b32  	%r797, %r1199, %r787;
	// begin inline asm
	shf.r.clamp.b32 %r795, %r797, %r797, %r894;
	// end inline asm
	add.s32 	%r1200, %r795, %r1197;
	xor.b32  	%r801, %r1200, %r791;
	// begin inline asm
	shf.r.clamp.b32 %r799, %r801, %r801, %r898;
	// end inline asm
	add.s32 	%r1201, %r735, %r908;
	add.s32 	%r1202, %r1201, %r1182;
	xor.b32  	%r805, %r763, %r1202;
	// begin inline asm
	shf.r.clamp.b32 %r803, %r805, %r805, %r886;
	// end inline asm
	add.s32 	%r1203, %r803, %r1171;
	xor.b32  	%r809, %r1203, %r735;
	// begin inline asm
	shf.r.clamp.b32 %r807, %r809, %r809, %r890;
	// end inline asm
	add.s32 	%r1204, %r1202, %r915;
	add.s32 	%r1205, %r1204, %r807;
	xor.b32  	%r813, %r1205, %r803;
	// begin inline asm
	shf.r.clamp.b32 %r811, %r813, %r813, %r894;
	// end inline asm
	add.s32 	%r1206, %r811, %r1203;
	xor.b32  	%r817, %r1206, %r807;
	// begin inline asm
	shf.r.clamp.b32 %r815, %r817, %r817, %r898;
	// end inline asm
	add.s32 	%r1207, %r751, %r914;
	add.s32 	%r1208, %r1207, %r1188;
	xor.b32  	%r821, %r1208, %r715;
	// begin inline asm
	shf.r.clamp.b32 %r819, %r821, %r821, %r886;
	// end inline asm
	add.s32 	%r1209, %r819, %r1177;
	xor.b32  	%r825, %r1209, %r751;
	// begin inline asm
	shf.r.clamp.b32 %r823, %r825, %r825, %r890;
	// end inline asm
	add.s32 	%r1210, %r1208, %r912;
	add.s32 	%r1211, %r1210, %r823;
	xor.b32  	%r829, %r1211, %r819;
	// begin inline asm
	shf.r.clamp.b32 %r827, %r829, %r829, %r894;
	// end inline asm
	add.s32 	%r1212, %r827, %r1209;
	xor.b32  	%r833, %r1212, %r823;
	// begin inline asm
	shf.r.clamp.b32 %r831, %r833, %r833, %r898;
	// end inline asm
	add.s32 	%r1213, %r799, %r1193;
	xor.b32  	%r837, %r827, %r1213;
	// begin inline asm
	shf.r.clamp.b32 %r835, %r837, %r837, %r886;
	// end inline asm
	add.s32 	%r1214, %r835, %r1206;
	xor.b32  	%r841, %r1214, %r799;
	// begin inline asm
	shf.r.clamp.b32 %r839, %r841, %r841, %r890;
	// end inline asm
	add.s32 	%r1215, %r1213, %r916;
	add.s32 	%r1216, %r1215, %r839;
	xor.b32  	%r845, %r1216, %r835;
	// begin inline asm
	shf.r.clamp.b32 %r843, %r845, %r845, %r894;
	// end inline asm
	add.s32 	%r1217, %r843, %r1214;
	xor.b32  	%r849, %r1217, %r839;
	// begin inline asm
	shf.r.clamp.b32 %r847, %r849, %r849, %r898;
	// end inline asm
	add.s32 	%r1218, %r1199, %r909;
	add.s32 	%r1219, %r1218, %r815;
	xor.b32  	%r853, %r1219, %r779;
	// begin inline asm
	shf.r.clamp.b32 %r851, %r853, %r853, %r886;
	// end inline asm
	add.s32 	%r1220, %r851, %r1212;
	xor.b32  	%r857, %r1220, %r815;
	// begin inline asm
	shf.r.clamp.b32 %r855, %r857, %r857, %r890;
	// end inline asm
	add.s32 	%r1221, %r1219, %r918;
	add.s32 	%r1222, %r1221, %r855;
	xor.b32  	%r861, %r1222, %r851;
	// begin inline asm
	shf.r.clamp.b32 %r859, %r861, %r861, %r894;
	// end inline asm
	add.s32 	%r1223, %r859, %r1220;
	xor.b32  	%r865, %r1223, %r855;
	// begin inline asm
	shf.r.clamp.b32 %r863, %r865, %r865, %r898;
	// end inline asm
	add.s32 	%r1224, %r1205, %r1;
	add.s32 	%r1225, %r1224, %r831;
	xor.b32  	%r869, %r1225, %r795;
	// begin inline asm
	shf.r.clamp.b32 %r867, %r869, %r869, %r886;
	// end inline asm
	add.s32 	%r1226, %r867, %r1194;
	xor.b32  	%r873, %r1226, %r831;
	// begin inline asm
	shf.r.clamp.b32 %r871, %r873, %r873, %r890;
	// end inline asm
	add.s32 	%r1227, %r1225, %r910;
	add.s32 	%r1228, %r1227, %r871;
	xor.b32  	%r877, %r1228, %r867;
	// begin inline asm
	shf.r.clamp.b32 %r875, %r877, %r877, %r894;
	// end inline asm
	add.s32 	%r1229, %r875, %r1226;
	xor.b32  	%r881, %r1229, %r871;
	// begin inline asm
	shf.r.clamp.b32 %r879, %r881, %r881, %r898;
	// end inline asm
	add.s32 	%r1230, %r783, %r913;
	add.s32 	%r1231, %r1230, %r1211;
	xor.b32  	%r885, %r1231, %r811;
	// begin inline asm
	shf.r.clamp.b32 %r883, %r885, %r885, %r886;
	// end inline asm
	add.s32 	%r1232, %r883, %r1200;
	xor.b32  	%r889, %r1232, %r783;
	// begin inline asm
	shf.r.clamp.b32 %r887, %r889, %r889, %r890;
	// end inline asm
	add.s32 	%r1233, %r887, %r1231;
	xor.b32  	%r893, %r1233, %r883;
	// begin inline asm
	shf.r.clamp.b32 %r891, %r893, %r893, %r894;
	// end inline asm
	add.s32 	%r1234, %r891, %r1232;
	xor.b32  	%r897, %r1234, %r887;
	// begin inline asm
	shf.r.clamp.b32 %r895, %r897, %r897, %r898;
	// end inline asm
	setp.ne.s32 	%p1, %r879, %r843;
	@%p1 bra 	$L__BB0_3;

	ld.param.u64 	%rd6, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_0];
	cvta.to.global.u64 	%rd5, %rd6;
	atom.global.inc.u32 	%r1235, [%rd5], -1;
	add.s32 	%r2, %r1235, 1;
	setp.gt.u32 	%p2, %r2, 32;
	@%p2 bra 	$L__BB0_3;

	mov.u32 	%r1239, %tid.x;
	mov.u32 	%r1238, %ctaid.x;
	mov.u32 	%r1237, %ntid.x;
	mad.lo.s32 	%r1236, %r1237, %r1238, %r1239;
	ld.param.u64 	%rd8, [_Z6searchPjjjjjjjjjjjjjjjjjjjjj_param_0];
	cvta.to.global.u64 	%rd7, %rd8;
	mul.wide.u32 	%rd3, %r2, 4;
	add.s64 	%rd4, %rd7, %rd3;
	st.global.u32 	[%rd4], %r1236;

$L__BB0_3:
	ret;

}

